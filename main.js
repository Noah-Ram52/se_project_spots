!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{const o=t.id+"-error",n=e.querySelector("#"+o);n.classList.remove(r.errorClass),n.textContent="",t.classList.remove(r.errorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):o(t,r)},o=(e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass)},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t?(e.textContent=`${o}`,console.log(`Setting text to ${o}`)):(e.textContent=`${r}`,console.log(`Setting text to ${r}`))}const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}postNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editCardsInfo(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}handleLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"72fba6f0-9246-4fa8-93f3-898fa1384ea9","Content-Type":"application/json"}});s.getAppInfo().then((e=>{let[t,r]=e;console.log("Avatar URL:",r.avatar),m.src=r.avatar,d.textContent=r.name,u.textContent=r.about,t.forEach((e=>{const t=R(e);N.prepend(t)}))})).catch(console.error);const l=document.querySelector(".profile__edit-btn"),i=document.querySelector(".profile__add-btn"),c=document.querySelector(".profile__avatar-btn"),d=document.querySelector(".profile__name"),u=document.querySelector(".profile__description"),m=document.querySelector(".profile__avatar"),_=document.querySelector("#edit-profile-modal"),h=_.querySelector(".modal__form"),v=_.querySelector(".modal__close-btn"),S=_.querySelector("#profile-name-input"),f=_.querySelector("#profile-description-input"),y=document.querySelector("#add-card-modal"),b=y.querySelector(".modal__form"),p=y.querySelector(".modal__submit-btn"),g=y.querySelector(".modal__close-btn"),C=y.querySelector("#add-card-name-input"),k=y.querySelector("#add-card-link-input"),q=document.querySelector("#avatar-modal"),E=q.querySelector(".modal__form"),L=(q.querySelector(".modal__submit-btn"),q.querySelector(".modal__close-btn")),x=q.querySelector("#profile-avatar-input"),$=document.querySelector("#delete-modal"),j=$.querySelector(".modal__form"),U=$.querySelector(".modal__close-btn"),D=$.querySelector(".modal__submit-btn.modal__submit-btn_cancel"),P=document.querySelector("#preview-modal"),I=P.querySelector(".modal__image"),A=P.querySelector(".modal__caption"),T=P.querySelector(".modal__close-btn"),w=document.querySelector("#card-template"),N=document.querySelector(".cards__list");let O,B;function J(e){"Escape"===e.key&&M(document.querySelector(".modal_opened"))}function H(e){e.target.classList.contains("modal_opened")&&M(e.currentTarget)}function z(e){e.classList.add("modal_opened"),e.addEventListener("mousedown",H),document.addEventListener("keyup",J)}function M(e){e.classList.remove("modal_opened"),e.removeEventListener("mousedown",H),document.removeEventListener("keyup",J)}function R(e){console.log("Data in getCardElement:",e);const t=w.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-btn_liked"),n.addEventListener("click",(t=>{const r=n.classList.contains("card__like-btn_liked");s.handleLikeStatus(e._id,r).then((()=>{n.classList.toggle("card__like-btn_liked")})).catch(console.error)})),a.addEventListener("click",(()=>{console.log("Card data when delete clicked:",e),console.log("Card ID being selected:",e._id),B=e._id,O=t,z($)})),o.addEventListener("click",(()=>{z(P),A.textContent=e.name,I.src=e.link,I.alt=e.name})),t}var F;l.addEventListener("click",(()=>{var r,o;S.value=d.textContent,f.value=u.textContent,z(_),r=_,o=e,[S,f].forEach((e=>{t(r,e,o)}))})),v.addEventListener("click",(()=>{M(_)})),T.addEventListener("click",(()=>{M(P)})),i.addEventListener("click",(()=>{z(y)})),g.addEventListener("click",(()=>{M(y)})),c.addEventListener("click",(()=>{z(q)})),L.addEventListener("click",(()=>{M(q)})),j.addEventListener("submit",(e=>{e.preventDefault(),console.log("Attempting to delete card with ID:",B);const t=e.submitter;t.textContent="Deleting...",s.deleteCard(B).then((()=>{O.remove(),M($)})).catch(console.error).finally((()=>{!function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Delete",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Deleting...";t?(e.textContent=`${o}`,console.log(`Setting text to ${o}`)):(e.textContent=`${r}`,console.log(`Setting text to ${r}`))}(t,!1,"Delete","Deleting..."),t.textContent="Delete"}))})),U.addEventListener("click",(()=>{M($)})),D.addEventListener("click",(()=>{M($)})),h.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",a(t,!0,"Save","Saving..."),s.editUserInfo(S.value,f.value).then((e=>{d.textContent=e.name,u.textContent=e.about,M(_)})).catch(console.error).finally((()=>{a(t,!1,"Save","Saving..."),t.textContent="Save"}))})),b.addEventListener("submit",(function(t){t.preventDefault();const r={name:C.value,link:k.value},o=t.submitter;o.textContent="Saving...",s.postNewCard(r).then((t=>{const r=R(t);N.prepend(r),M(y),b.reset(),n(p,e)})).catch(console.error).finally((()=>{a(o,!1,"Save","Saving..."),o.textContent="Save"}))})),E.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",s.editAvatarInfo(x.value).then((e=>{d.textContent=e.name,u.textContent=e.about,m.src=e.avatar,M(q),E.reset()})).catch(console.error).finally((()=>{a(t,!1,"Save","Saving..."),t.textContent="Save"}))})),F=e,document.querySelectorAll(F.formSelector).forEach((e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=t.id+"-error";console.log(n);const a=e.querySelector("#"+n);a.classList.add(o.errorClass),a.textContent=r,t.classList.add(o.errorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)}))}))})(e,F)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,